{"version":3,"file":"static/js/646.74de3d33.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selector.js","webpack://goit-react-hw-08-phonebook/./src/components/Search/Search.module.css?06df","components/Search/Search.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","pages/ContactsView/ContactsView.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n// export const selectFilteredContacts = state => {\n//   const fiterContacts = state.filter\n//     ? state.contacts.items.filter(contact =>\n//         contact.name.toLowerCase().includes(state.filter)\n//       )\n//     : state.contacts.items;\n\n//   return fiterContacts;\n// };\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, queryFilter) => {\n    const fiterContacts = queryFilter\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(queryFilter)\n        )\n      : contacts;\n\n    return fiterContacts;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"findLabel\":\"Search_findLabel__koTIS\",\"findInput\":\"Search_findInput__nW7iD\"};","import css from './Search.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selector';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n\n  const onFilterChange = query => {\n    dispatch(addFilter(query.toLowerCase()));\n  };\n  const filter = useSelector(selectFilter);\n\n  return (\n    <label htmlFor=\"findInputId\" className={css.findLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        placeholder=\"\"\n        name=\"filterContact\"\n        value={filter}\n        id=\"findInputId\"\n        onChange={e => onFilterChange(e.target.value)}\n        className={css.findInput}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </label>\n  );\n};\n\nexport default Search;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookForm\":\"Phonebook_phonebookForm__CaULo\",\"phonebookLabel\":\"Phonebook_phonebookLabel__yILxJ\",\"phonebookInput\":\"Phonebook_phonebookInput__2iqwS\",\"phonebookSubmit\":\"Phonebook_phonebookSubmit__mhdey\"};","import { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport css from './Phonebook.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selector';\n\nconst Phonebook = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const storeContacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const alertContact = storeContacts.filter(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    alertContact.length\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number: phone }));\n\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.phonebookForm}>\n      <label htmlFor=\"nameInputId\" className={css.phonebookLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id=\"nameInputId\"\n          onChange={e => setName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          className={css.phonebookInput}\n          required\n        />\n      </label>\n      <label htmlFor=\"numberInputId\" className={css.phonebookLabel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={e => setPhone(e.target.value)}\n          id=\"numberInputId\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          className={css.phonebookInput}\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.phonebookSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Phonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookSection\":\"Section_phonebookSection__JI8xl\",\"phonebookSectionTitle\":\"Section_phonebookSectionTitle__5jlrK\"};","import React from 'react';\nimport css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <div className={css.phonebookSection}>\n    <h2 className={css.phonebookSectionTitle}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.prototype = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"Contacts_contactsList__g3sDu\",\"contactsListItem\":\"Contacts_contactsListItem__VPa2O\",\"contactInfo\":\"Contacts_contactInfo__Fawyl\",\"delBtn\":\"Contacts_delBtn__y9yvR\"};","import React from 'react';\nimport css from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n// import { getContacts } from 'redux/selector';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectFilteredContacts } from 'redux/contacts/selector';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDelContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={css.contactsListItem}>\n          <p className={css.contactInfo}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            onClick={() => onDelContact(id)}\n            className={css.delBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contacts;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selector';\nimport Search from 'components/Search/Search';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport Section from 'components/Section/Section';\nimport Contacts from 'components/Contacts/Contacts';\n\nconst ContactsView = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Section title=\"Contacts\">\n        <Search />\n        <Contacts />\n      </Section>\n    </main>\n  );\n};\n\nexport default ContactsView;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","queryFilter","contact","toLowerCase","includes","dispatch","useDispatch","useSelector","htmlFor","className","css","type","placeholder","id","onChange","e","query","target","addFilter","pattern","required","useState","setName","phone","setPhone","storeContacts","reset","onSubmit","preventDefault","alert","addContact","number","title","Section","children","prototype","PropTypes","Contacts","onClick","deleteContact","onDelContact","useEffect","fetchContact","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}